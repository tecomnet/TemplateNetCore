/*
 * User API
 *
 * Api para exponer la funcionalidad de usuarios. 
 *
 * OpenAPI spec version: 0.1.0
 * Contact: edilberto_diaz14@hotmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System.ComponentModel.DataAnnotations;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Template.RestAPI.Attributes;
using Template.RestAPI.Controllers.Base;
using Template.RestAPI.Models;
using InlineResponse400 = Template.RestAPI.Models.InlineResponse400;

namespace Template.RestAPI.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class UsersApiController : ServiceBaseController
    {
        /// <summary>
        /// Elimina un usuario
        /// </summary>
        /// <remarks>Elimina un usuario</remarks>
        /// <param name="version">Version of the API to use</param>
        /// <response code="200">OK</response>
        /// <response code="400">Response to client error satus code</response>
        /// <response code="401">Response to client error satus code</response>
        /// <response code="404">Response to client error satus code</response>
        [HttpDelete]
        [Route("/{version:apiVersion}/users")]
        [ValidateModelState]
        [SwaggerOperation("DeleteUser")]
        [SwaggerResponse(statusCode: 200, type: typeof(UserResult), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(InlineResponse400), description: "Response to client error satus code")]
        [SwaggerResponse(statusCode: 401, type: typeof(InlineResponse400), description: "Response to client error satus code")]
        [SwaggerResponse(statusCode: 404, type: typeof(InlineResponse400), description: "Response to client error satus code")]
        public abstract Task<IActionResult> DeleteUser([FromRoute] [Required] [RegularExpression("^(?<major>[0-9]+).(?<minor>[0-9]+)$")] string version);

        /// <summary>
        /// Obtiene el usuario
        /// </summary>
        /// <remarks>Obtiene el usuario</remarks>
        /// <param name="version">Version of the API to use</param>
        /// <response code="200">OK</response>
        /// <response code="400">Response to client error satus code</response>
        /// <response code="401">Response to client error satus code</response>
        /// <response code="404">Response to client error satus code</response>
        [HttpGet]
        [Route("/{version:apiVersion}/users")]
        [ValidateModelState]
        [SwaggerOperation("GetUser")]
        [SwaggerResponse(statusCode: 200, type: typeof(UserResult), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(InlineResponse400), description: "Response to client error satus code")]
        [SwaggerResponse(statusCode: 401, type: typeof(InlineResponse400), description: "Response to client error satus code")]
        [SwaggerResponse(statusCode: 404, type: typeof(InlineResponse400), description: "Response to client error satus code")]
        public abstract Task<IActionResult> GetUser([FromRoute] [Required] [RegularExpression("^(?<major>[0-9]+).(?<minor>[0-9]+)$")] string version);

        /// <summary>
        /// Crea un usuario
        /// </summary>
        /// <remarks>Crea un usuario</remarks>
        /// <param name="version">Version of the API to use</param>
        /// <param name="body"></param>
        /// <response code="201">Created</response>
        /// <response code="400">Response to client error satus code</response>
        /// <response code="401">Response to client error satus code</response>
        [HttpPost]
        [Route("/{version:apiVersion}/users")]
        [ValidateModelState]
        [SwaggerOperation("PostUser")]
        [SwaggerResponse(statusCode: 201, type: typeof(UserResult), description: "Created")]
        [SwaggerResponse(statusCode: 400, type: typeof(InlineResponse400), description: "Response to client error satus code")]
        [SwaggerResponse(statusCode: 401, type: typeof(InlineResponse400), description: "Response to client error satus code")]
        public abstract Task<IActionResult> PostUser([FromRoute] [Required] [RegularExpression("^(?<major>[0-9]+).(?<minor>[0-9]+)$")] string version, [FromBody] UserRequest body);
        /// <summary>
        /// Actualiza un usuario
        /// </summary>
        /// <remarks>Actualiza un usuario</remarks>
        /// <param name="version">Version of the API to use</param>
        /// <param name="body"></param>
        /// <response code="200">OK</response>
        /// <response code="400">Response to client error satus code</response>
        /// <response code="401">Response to client error satus code</response>
        /// <response code="404">Response to client error satus code</response>
        [HttpPut]
        [Route("/{version:apiVersion}/users")]
        [ValidateModelState]
        [SwaggerOperation("PutUser")]
        [SwaggerResponse(statusCode: 200, type: typeof(UserResult), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(InlineResponse400), description: "Response to client error satus code")]
        [SwaggerResponse(statusCode: 401, type: typeof(InlineResponse400), description: "Response to client error satus code")]
        [SwaggerResponse(statusCode: 404, type: typeof(InlineResponse400), description: "Response to client error satus code")]
        public abstract Task<IActionResult> PutUser([FromRoute] [Required] [RegularExpression("^(?<major>[0-9]+).(?<minor>[0-9]+)$")] string version, [FromBody] UserUpdateRequest body);
    }
}
